#ifndef ECONTACTSGROUPUSER_H
#define ECONTACTSGROUPUSER_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class EContactsGroupUser
**/
class  EContactsGroupUser : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(qint64 groupID READ getGroupID WRITE setGroupID USER true)
	Q_PROPERTY(qint64 contactID READ getContactID WRITE setContactID USER true)

public:
	Q_INVOKABLE EContactsGroupUser(QObject *parent=0);
	~EContactsGroupUser(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EContactsGroupUser(const EContactsGroupUser &d) : QObject () { setData(d); }
	Q_INVOKABLE EContactsGroupUser &operator=(const EContactsGroupUser &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EContactsGroupUser &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EContactsGroupUser &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	inline qint64 getGroupID() const {return groupID;}
	void setGroupID(qint64 d){groupID=d;}
	inline qint64 getContactID() const {return contactID;}
	void setContactID(qint64 d){contactID=d;}

protected:
	EContactsGroupUser &setData(const EContactsGroupUser &d){
		id=d.id;
		groupID=d.groupID;
		contactID=d.contactID;
		return *this;
	}
	bool equal(const EContactsGroupUser &other) const {
		if(id!=other.id)return false;
		if(groupID!=other.groupID)return false;
		if(contactID!=other.contactID)return false;
		return true;
	}
	qint64 id;
	qint64 groupID;
	qint64 contactID;
};

Q_DECLARE_METATYPE(EContactsGroupUser)
Q_DECLARE_METATYPE(EContactsGroupUser*)
Q_DECLARE_METATYPE(QList<EContactsGroupUser*>)
Q_DECLARE_METATYPE(QList<EContactsGroupUser>)
#endif
