#ifndef EUSERPICTURE_H
#define EUSERPICTURE_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class EUserPicture
**/
class  EUserPicture : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(qint64 userID READ getUserID WRITE setUserID USER true)
	Q_PROPERTY(qint64 blockID READ getBlockID WRITE setBlockID USER true)
	Q_PROPERTY(qint32 picNumber READ getPicNumber WRITE setPicNumber USER true)
	Q_PROPERTY(QString name READ getName WRITE setName USER true)
	Q_PROPERTY(QString description READ getDescription WRITE setDescription USER true)

public:
	Q_INVOKABLE EUserPicture(QObject *parent=0);
	~EUserPicture(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EUserPicture(const EUserPicture &d) : QObject () { setData(d); }
	Q_INVOKABLE EUserPicture &operator=(const EUserPicture &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EUserPicture &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EUserPicture &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	inline qint64 getUserID() const {return userID;}
	void setUserID(qint64 d){userID=d;}
	inline qint64 getBlockID() const {return blockID;}
	void setBlockID(qint64 d){blockID=d;}
	inline qint32 getPicNumber() const {return picNumber;}
	void setPicNumber(qint32 d){picNumber=d;}
	Q_INVOKABLE QString getName() const {return name;}
	void setName(const QString &d){name=d;}
	Q_INVOKABLE QString getDescription() const {return description;}
	void setDescription(const QString &d){description=d;}

protected:
	EUserPicture &setData(const EUserPicture &d){
		id=d.id;
		userID=d.userID;
		blockID=d.blockID;
		picNumber=d.picNumber;
		name=d.name;
		description=d.description;
		return *this;
	}
	bool equal(const EUserPicture &other) const {
		if(id!=other.id)return false;
		if(userID!=other.userID)return false;
		if(blockID!=other.blockID)return false;
		if(picNumber!=other.picNumber)return false;
		if(name!=other.name)return false;
		if(description!=other.description)return false;
		return true;
	}
	qint64 id;
	qint64 userID;
	qint64 blockID;
	qint32 picNumber;
	QString name;
	QString description;
};

Q_DECLARE_METATYPE(EUserPicture)
Q_DECLARE_METATYPE(EUserPicture*)
Q_DECLARE_METATYPE(QList<EUserPicture*>)
Q_DECLARE_METATYPE(QList<EUserPicture>)
#endif
