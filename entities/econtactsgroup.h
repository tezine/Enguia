#ifndef ECONTACTSGROUP_H
#define ECONTACTSGROUP_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class EContactsGroup
**/
class  EContactsGroup : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(QString name READ getName WRITE setName USER true)
	Q_PROPERTY(qint64 iconID READ getIconID WRITE setIconID USER true)

public:
	Q_INVOKABLE EContactsGroup(QObject *parent=0);
	~EContactsGroup(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EContactsGroup(const EContactsGroup &d) : QObject () { setData(d); }
	Q_INVOKABLE EContactsGroup &operator=(const EContactsGroup &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EContactsGroup &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EContactsGroup &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	Q_INVOKABLE QString getName() const {return name;}
	void setName(const QString &d){name=d;}
	inline qint64 getIconID() const {return iconID;}
	void setIconID(qint64 d){iconID=d;}

protected:
	EContactsGroup &setData(const EContactsGroup &d){
		id=d.id;
		name=d.name;
		iconID=d.iconID;
		return *this;
	}
	bool equal(const EContactsGroup &other) const {
		if(id!=other.id)return false;
		if(name!=other.name)return false;
		if(iconID!=other.iconID)return false;
		return true;
	}
	qint64 id;
	QString name;
	qint64 iconID;
};

Q_DECLARE_METATYPE(EContactsGroup)
Q_DECLARE_METATYPE(EContactsGroup*)
Q_DECLARE_METATYPE(QList<EContactsGroup*>)
Q_DECLARE_METATYPE(QList<EContactsGroup>)
#endif
