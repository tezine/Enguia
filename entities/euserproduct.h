#ifndef EUSERPRODUCT_H
#define EUSERPRODUCT_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class EUserProduct
**/
class  EUserProduct : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(qint64 userID READ getUserID WRITE setUserID USER true)
	Q_PROPERTY(qint64 categoryID READ getCategoryID WRITE setCategoryID USER true)
	Q_PROPERTY(QString name READ getName WRITE setName USER true)
	Q_PROPERTY(QString brief READ getBrief WRITE setBrief USER true)
	Q_PROPERTY(QString description READ getDescription WRITE setDescription USER true)
	Q_PROPERTY(double price READ getPrice WRITE setPrice USER true)
	Q_PROPERTY(qint64 viewCount READ getViewCount WRITE setViewCount USER true)
	Q_PROPERTY(QString categoryName READ getCategoryName WRITE setCategoryName USER true)
	Q_PROPERTY(QString option1Name READ getOption1Name WRITE setOption1Name USER true)
	Q_PROPERTY(QString option2Name READ getOption2Name WRITE setOption2Name USER true)
	Q_PROPERTY(QString option3Name READ getOption3Name WRITE setOption3Name USER true)
	Q_PROPERTY(QString addOnName READ getAddOnName WRITE setAddOnName USER true)

public:
	Q_INVOKABLE EUserProduct(QObject *parent=0);
	~EUserProduct(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EUserProduct(const EUserProduct &d) : QObject () { setData(d); }
	Q_INVOKABLE EUserProduct &operator=(const EUserProduct &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EUserProduct &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EUserProduct &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	inline qint64 getUserID() const {return userID;}
	void setUserID(qint64 d){userID=d;}
	inline qint64 getCategoryID() const {return categoryID;}
	void setCategoryID(qint64 d){categoryID=d;}
	Q_INVOKABLE QString getName() const {return name;}
	void setName(const QString &d){name=d;}
	Q_INVOKABLE QString getBrief() const {return brief;}
	void setBrief(const QString &d){brief=d;}
	Q_INVOKABLE QString getDescription() const {return description;}
	void setDescription(const QString &d){description=d;}
	inline double getPrice() const {return price;}
	void setPrice(double d){price=d;}
	inline qint64 getViewCount() const {return viewCount;}
	void setViewCount(qint64 d){viewCount=d;}
	Q_INVOKABLE QString getCategoryName() const {return categoryName;}
	void setCategoryName(const QString &d){categoryName=d;}
	Q_INVOKABLE QString getOption1Name() const {return option1Name;}
	void setOption1Name(const QString &d){option1Name=d;}
	Q_INVOKABLE QString getOption2Name() const {return option2Name;}
	void setOption2Name(const QString &d){option2Name=d;}
	Q_INVOKABLE QString getOption3Name() const {return option3Name;}
	void setOption3Name(const QString &d){option3Name=d;}
	Q_INVOKABLE QString getAddOnName() const {return addOnName;}
	void setAddOnName(const QString &d){addOnName=d;}

protected:
	EUserProduct &setData(const EUserProduct &d){
		id=d.id;
		userID=d.userID;
		categoryID=d.categoryID;
		name=d.name;
		brief=d.brief;
		description=d.description;
		price=d.price;
		viewCount=d.viewCount;
		categoryName=d.categoryName;
		option1Name=d.option1Name;
		option2Name=d.option2Name;
		option3Name=d.option3Name;
		addOnName=d.addOnName;
		return *this;
	}
	bool equal(const EUserProduct &other) const {
		if(id!=other.id)return false;
		if(userID!=other.userID)return false;
		if(categoryID!=other.categoryID)return false;
		if(name!=other.name)return false;
		if(brief!=other.brief)return false;
		if(description!=other.description)return false;
		if(price!=other.price)return false;
		if(viewCount!=other.viewCount)return false;
		if(categoryName!=other.categoryName)return false;
		if(option1Name!=other.option1Name)return false;
		if(option2Name!=other.option2Name)return false;
		if(option3Name!=other.option3Name)return false;
		if(addOnName!=other.addOnName)return false;
		return true;
	}
	qint64 id;
	qint64 userID;
	qint64 categoryID;
	QString name;
	QString brief;
	QString description;
	double price;
	qint64 viewCount;
	QString categoryName;
	QString option1Name;
	QString option2Name;
	QString option3Name;
	QString addOnName;
};

Q_DECLARE_METATYPE(EUserProduct)
Q_DECLARE_METATYPE(EUserProduct*)
Q_DECLARE_METATYPE(QList<EUserProduct*>)
Q_DECLARE_METATYPE(QList<EUserProduct>)
#endif
