#ifndef EUSERSCHEDULEQUEUE_H
#define EUSERSCHEDULEQUEUE_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class EUserScheduleQueue
**/
class  EUserScheduleQueue : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(qint64 professionalUserID READ getProfessionalUserID WRITE setProfessionalUserID USER true)
	Q_PROPERTY(qint64 clientUserID READ getClientUserID WRITE setClientUserID USER true)
	Q_PROPERTY(qint64 serviceID READ getServiceID WRITE setServiceID USER true)
	Q_PROPERTY(QDate dt1 READ getDt1 WRITE setDt1 USER true)
	Q_PROPERTY(QDate dt2 READ getDt2 WRITE setDt2 USER true)
	Q_PROPERTY(QDate dt3 READ getDt3 WRITE setDt3 USER true)
	Q_PROPERTY(QDate dt4 READ getDt4 WRITE setDt4 USER true)
	Q_PROPERTY(QDate dt5 READ getDt5 WRITE setDt5 USER true)
	Q_PROPERTY(QString comment READ getComment WRITE setComment USER true)
	Q_PROPERTY(QDateTime dateInserted READ getDateInserted WRITE setDateInserted USER true)
	Q_PROPERTY(QString clientName READ getClientName WRITE setClientName USER true)
	Q_PROPERTY(QString clientPhone READ getClientPhone WRITE setClientPhone USER true)
	Q_PROPERTY(QString serviceName READ getServiceName WRITE setServiceName USER true)

public:
	Q_INVOKABLE EUserScheduleQueue(QObject *parent=0);
	~EUserScheduleQueue(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EUserScheduleQueue(const EUserScheduleQueue &d) : QObject () { setData(d); }
	Q_INVOKABLE EUserScheduleQueue &operator=(const EUserScheduleQueue &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EUserScheduleQueue &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EUserScheduleQueue &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	inline qint64 getProfessionalUserID() const {return professionalUserID;}
	void setProfessionalUserID(qint64 d){professionalUserID=d;}
	inline qint64 getClientUserID() const {return clientUserID;}
	void setClientUserID(qint64 d){clientUserID=d;}
	inline qint64 getServiceID() const {return serviceID;}
	void setServiceID(qint64 d){serviceID=d;}
	Q_INVOKABLE QDate getDt1() const {return dt1;}
	void setDt1(const QDate &d){dt1=d;}
	Q_INVOKABLE QDate getDt2() const {return dt2;}
	void setDt2(const QDate &d){dt2=d;}
	Q_INVOKABLE QDate getDt3() const {return dt3;}
	void setDt3(const QDate &d){dt3=d;}
	Q_INVOKABLE QDate getDt4() const {return dt4;}
	void setDt4(const QDate &d){dt4=d;}
	Q_INVOKABLE QDate getDt5() const {return dt5;}
	void setDt5(const QDate &d){dt5=d;}
	Q_INVOKABLE QString getComment() const {return comment;}
	void setComment(const QString &d){comment=d;}
	Q_INVOKABLE QDateTime getDateInserted() const {return dateInserted;}
	void setDateInserted(const QDateTime &d){dateInserted=d;}
	Q_INVOKABLE QString getClientName() const {return clientName;}
	void setClientName(const QString &d){clientName=d;}
	Q_INVOKABLE QString getClientPhone() const {return clientPhone;}
	void setClientPhone(const QString &d){clientPhone=d;}
	Q_INVOKABLE QString getServiceName() const {return serviceName;}
	void setServiceName(const QString &d){serviceName=d;}

protected:
	EUserScheduleQueue &setData(const EUserScheduleQueue &d){
		id=d.id;
		professionalUserID=d.professionalUserID;
		clientUserID=d.clientUserID;
		serviceID=d.serviceID;
		dt1=d.dt1;
		dt2=d.dt2;
		dt3=d.dt3;
		dt4=d.dt4;
		dt5=d.dt5;
		comment=d.comment;
		dateInserted=d.dateInserted;
		clientName=d.clientName;
		clientPhone=d.clientPhone;
		serviceName=d.serviceName;
		return *this;
	}
	bool equal(const EUserScheduleQueue &other) const {
		if(id!=other.id)return false;
		if(professionalUserID!=other.professionalUserID)return false;
		if(clientUserID!=other.clientUserID)return false;
		if(serviceID!=other.serviceID)return false;
		if(dt1!=other.dt1)return false;
		if(dt2!=other.dt2)return false;
		if(dt3!=other.dt3)return false;
		if(dt4!=other.dt4)return false;
		if(dt5!=other.dt5)return false;
		if(comment!=other.comment)return false;
		if(dateInserted!=other.dateInserted)return false;
		if(clientName!=other.clientName)return false;
		if(clientPhone!=other.clientPhone)return false;
		if(serviceName!=other.serviceName)return false;
		return true;
	}
	qint64 id;
	qint64 professionalUserID;
	qint64 clientUserID;
	qint64 serviceID;
	QDate dt1;
	QDate dt2;
	QDate dt3;
	QDate dt4;
	QDate dt5;
	QString comment;
	QDateTime dateInserted;
	QString clientName;
	QString clientPhone;
	QString serviceName;
};

Q_DECLARE_METATYPE(EUserScheduleQueue)
Q_DECLARE_METATYPE(EUserScheduleQueue*)
Q_DECLARE_METATYPE(QList<EUserScheduleQueue*>)
Q_DECLARE_METATYPE(QList<EUserScheduleQueue>)
#endif
