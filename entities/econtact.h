#ifndef ECONTACT_H
#define ECONTACT_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class EContact
**/
class  EContact : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 userID READ getUserID WRITE setUserID USER true)
	Q_PROPERTY(qint64 placeID READ getPlaceID WRITE setPlaceID USER true)
	Q_PROPERTY(QString name READ getName WRITE setName USER true)

public:
	Q_INVOKABLE EContact(QObject *parent=0);
	~EContact(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EContact(const EContact &d) : QObject () { setData(d); }
	Q_INVOKABLE EContact &operator=(const EContact &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EContact &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EContact &other) const{ if(equal(other))return false;return true;}
	inline qint64 getUserID() const {return userID;}
	void setUserID(qint64 d){userID=d;}
	inline qint64 getPlaceID() const {return placeID;}
	void setPlaceID(qint64 d){placeID=d;}
	Q_INVOKABLE QString getName() const {return name;}
	void setName(const QString &d){name=d;}

protected:
	EContact &setData(const EContact &d){
		userID=d.userID;
		placeID=d.placeID;
		name=d.name;
		return *this;
	}
	bool equal(const EContact &other) const {
		if(userID!=other.userID)return false;
		if(placeID!=other.placeID)return false;
		if(name!=other.name)return false;
		return true;
	}
	qint64 userID;
	qint64 placeID;
	QString name;
};

Q_DECLARE_METATYPE(EContact)
Q_DECLARE_METATYPE(EContact*)
Q_DECLARE_METATYPE(QList<EContact*>)
Q_DECLARE_METATYPE(QList<EContact>)
#endif
