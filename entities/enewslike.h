#ifndef ENEWSLIKE_H
#define ENEWSLIKE_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class ENewsLike
**/
class  ENewsLike : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(qint64 newsID READ getNewsID WRITE setNewsID USER true)
	Q_PROPERTY(qint64 userID READ getUserID WRITE setUserID USER true)
	Q_PROPERTY(bool likeit READ getLikeit WRITE setLikeit USER true)

public:
	Q_INVOKABLE ENewsLike(QObject *parent=0);
	~ENewsLike(){}
	static QMetaObject getMeta();
	Q_INVOKABLE ENewsLike(const ENewsLike &d) : QObject () { setData(d); }
	Q_INVOKABLE ENewsLike &operator=(const ENewsLike &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const ENewsLike &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const ENewsLike &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	inline qint64 getNewsID() const {return newsID;}
	void setNewsID(qint64 d){newsID=d;}
	inline qint64 getUserID() const {return userID;}
	void setUserID(qint64 d){userID=d;}
	inline bool getLikeit() const {return likeit;}
	void setLikeit(bool d){likeit=d;}

protected:
	ENewsLike &setData(const ENewsLike &d){
		id=d.id;
		newsID=d.newsID;
		userID=d.userID;
		likeit=d.likeit;
		return *this;
	}
	bool equal(const ENewsLike &other) const {
		if(id!=other.id)return false;
		if(newsID!=other.newsID)return false;
		if(userID!=other.userID)return false;
		if(likeit!=other.likeit)return false;
		return true;
	}
	qint64 id;
	qint64 newsID;
	qint64 userID;
	bool likeit;
};

Q_DECLARE_METATYPE(ENewsLike)
Q_DECLARE_METATYPE(ENewsLike*)
Q_DECLARE_METATYPE(QList<ENewsLike*>)
Q_DECLARE_METATYPE(QList<ENewsLike>)
#endif
