#ifndef ECSNEWLIKE_H
#define ECSNEWLIKE_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"


/**
*@class ECSNewLike
**/
class  ECSNewLike : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(qint64 newsID READ getNewsID WRITE setNewsID USER true)
	Q_PROPERTY(qint64 userID READ getUserID WRITE setUserID USER true)
	Q_PROPERTY(qint64 likeIt READ getLikeIt WRITE setLikeIt USER true)
	Q_PROPERTY(QString userName READ getUserName WRITE setUserName USER true)
	Q_PROPERTY(QByteArray userIcon READ getUserIcon WRITE setUserIcon USER true)

public:
	Q_INVOKABLE ECSNewLike(QObject *parent=0);
	~ECSNewLike(){}
	static QMetaObject getMeta();
	Q_INVOKABLE ECSNewLike(const ECSNewLike &d) : QObject () { setData(d); }
	Q_INVOKABLE ECSNewLike &operator=(const ECSNewLike &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const ECSNewLike &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const ECSNewLike &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	inline qint64 getNewsID() const {return newsID;}
	void setNewsID(qint64 d){newsID=d;}
	inline qint64 getUserID() const {return userID;}
	void setUserID(qint64 d){userID=d;}
	inline qint64 getLikeIt() const {return likeIt;}
	void setLikeIt(qint64 d){likeIt=d;}
	Q_INVOKABLE QString getUserName() const {return userName;}
	void setUserName(const QString &d){userName=d;}
	Q_INVOKABLE QByteArray getUserIcon() const {return userIcon;}
	void setUserIcon(const QByteArray &d){userIcon=d;}

protected:
	ECSNewLike &setData(const ECSNewLike &d){
		id=d.id;
		newsID=d.newsID;
		userID=d.userID;
		likeIt=d.likeIt;
		userName=d.userName;
		userIcon=d.userIcon;
		return *this;
	}
	bool equal(const ECSNewLike &other) const {
		if(id!=other.id)return false;
		if(newsID!=other.newsID)return false;
		if(userID!=other.userID)return false;
		if(likeIt!=other.likeIt)return false;
		if(userName!=other.userName)return false;
		if(userIcon!=other.userIcon)return false;
		return true;
	}
	qint64 id;
	qint64 newsID;
	qint64 userID;
	qint64 likeIt;
	QString userName;
	QByteArray userIcon;
};

Q_DECLARE_METATYPE(ECSNewLike)
Q_DECLARE_METATYPE(ECSNewLike*)
Q_DECLARE_METATYPE(QList<ECSNewLike*>)
Q_DECLARE_METATYPE(QList<ECSNewLike>)
#endif
