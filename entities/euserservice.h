#ifndef EUSERSERVICE_H
#define EUSERSERVICE_H
/**
*@author Tezine Technologies
*Machine generated. DO NOT EDIT THIS FILE!
**/
#include "QStringList"
#include "QDateTime"
#include "QVariant"
#include "QObject"

#include "float.h"

/**
*@class EUserService
**/
class  EUserService : public QObject {
	Q_OBJECT
	Q_PROPERTY(qint64 id READ getId WRITE setId USER true)
	Q_PROPERTY(qint64 professionalUserID READ getProfessionalUserID WRITE setProfessionalUserID USER true)
	Q_PROPERTY(QString name READ getName WRITE setName USER true)
	Q_PROPERTY(QString brief READ getBrief WRITE setBrief USER true)
	Q_PROPERTY(QString description READ getDescription WRITE setDescription USER true)
	Q_PROPERTY(float price READ getPrice WRITE setPrice USER true)
	Q_PROPERTY(int duration READ getDuration WRITE setDuration USER true)
	Q_PROPERTY(int maxPerUserOnDay READ getMaxPerUserOnDay WRITE setMaxPerUserOnDay USER true)
	Q_PROPERTY(int maxPerUserOnWeek READ getMaxPerUserOnWeek WRITE setMaxPerUserOnWeek USER true)
	Q_PROPERTY(int maxPerUserOnMonth READ getMaxPerUserOnMonth WRITE setMaxPerUserOnMonth USER true)

public:
	Q_INVOKABLE EUserService(QObject *parent=0);
	~EUserService(){}
	static QMetaObject getMeta();
	Q_INVOKABLE EUserService(const EUserService &d) : QObject () { setData(d); }
	Q_INVOKABLE EUserService &operator=(const EUserService &d){ return setData(d); }
	Q_INVOKABLE bool operator== (const EUserService &other) const{ if(equal(other))return true;return false;}
	Q_INVOKABLE inline bool operator!= (const EUserService &other) const{ if(equal(other))return false;return true;}
	inline qint64 getId() const {return id;}
	void setId(qint64 d){id=d;}
	inline qint64 getProfessionalUserID() const {return professionalUserID;}
	void setProfessionalUserID(qint64 d){professionalUserID=d;}
	Q_INVOKABLE QString getName() const {return name;}
	void setName(const QString &d){name=d;}
	Q_INVOKABLE QString getBrief() const {return brief;}
	void setBrief(const QString &d){brief=d;}
	Q_INVOKABLE QString getDescription() const {return description;}
	void setDescription(const QString &d){description=d;}
	Q_INVOKABLE float getPrice() const {return price;}
	void setPrice(const float &d){price=d;}
	inline int getDuration() const {return duration;}
	void setDuration(int d){duration=d;}
	inline int getMaxPerUserOnDay() const {return maxPerUserOnDay;}
	void setMaxPerUserOnDay(int d){maxPerUserOnDay=d;}
	inline int getMaxPerUserOnWeek() const {return maxPerUserOnWeek;}
	void setMaxPerUserOnWeek(int d){maxPerUserOnWeek=d;}
	inline int getMaxPerUserOnMonth() const {return maxPerUserOnMonth;}
	void setMaxPerUserOnMonth(int d){maxPerUserOnMonth=d;}

protected:
	EUserService &setData(const EUserService &d){
		id=d.id;
		professionalUserID=d.professionalUserID;
		name=d.name;
		brief=d.brief;
		description=d.description;
		price=d.price;
		duration=d.duration;
		maxPerUserOnDay=d.maxPerUserOnDay;
		maxPerUserOnWeek=d.maxPerUserOnWeek;
		maxPerUserOnMonth=d.maxPerUserOnMonth;
		return *this;
	}
	bool equal(const EUserService &other) const {
		if(id!=other.id)return false;
		if(professionalUserID!=other.professionalUserID)return false;
		if(name!=other.name)return false;
		if(brief!=other.brief)return false;
		if(description!=other.description)return false;
		if(price!=other.price)return false;
		if(duration!=other.duration)return false;
		if(maxPerUserOnDay!=other.maxPerUserOnDay)return false;
		if(maxPerUserOnWeek!=other.maxPerUserOnWeek)return false;
		if(maxPerUserOnMonth!=other.maxPerUserOnMonth)return false;
		return true;
	}
	qint64 id;
	qint64 professionalUserID;
	QString name;
	QString brief;
	QString description;
	float price;
	int duration;
	int maxPerUserOnDay;
	int maxPerUserOnWeek;
	int maxPerUserOnMonth;
};

Q_DECLARE_METATYPE(EUserService)
Q_DECLARE_METATYPE(EUserService*)
Q_DECLARE_METATYPE(QList<EUserService*>)
Q_DECLARE_METATYPE(QList<EUserService>)
#endif
